{"version":3,"sources":["assets/me.jpg","componenets/ToDoItem.js","componenets/ToDo.js","componenets/Footer.js","componenets/AddToDo.js","componenets/About.js","componenets/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ToDoItem","props","item","id","title","className","completed","type","onChange","markComplete","bind","this","style","color","onClick","delToDo","class","width","height","viewBox","fill","xmlns","d","fill-rule","clip-rule","ToDo","todos","map","key","Footer","target","href","rel","AddToDo","useState","setTitle","submit","e","preventDefault","addToDo","onSubmit","placeholder","name","value","About","src","require","alt","Header","to","AppToDo","setState","state","todo","filter","newItem","uuidv4","alert","exact","path","render","Fragment","component","React","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ab945933.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.2dac4b6c.jpg\";","import React from \"react\";\r\n\r\nfunction ToDoItem(props) {\r\n  const { id, title } = props.item;\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className={props.item.completed ? \"checked\" : \"wrap-items\"}>\r\n        <input\r\n          className=\"input-check\"\r\n          type=\"checkbox\"\r\n          onChange={props.markComplete.bind(this, id)}\r\n        />\r\n        <p className={props.item.completed ? \"marked\" : \"title\"}>{title}</p>\r\n        <div className=\"btn-del\">\r\n          <svg\r\n            style={{ color: \"#ce4175\" }}\r\n            onClick={props.delToDo.bind(this, id)}\r\n            class=\"bi bi-trash\"\r\n            width=\"1.7em\"\r\n            height=\"1.7em\"\r\n            viewBox=\"0 0 16 16\"\r\n            fill=\"currentColor\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path d=\"M5.5 5.5A.5.5 0 016 6v6a.5.5 0 01-1 0V6a.5.5 0 01.5-.5zm2.5 0a.5.5 0 01.5.5v6a.5.5 0 01-1 0V6a.5.5 0 01.5-.5zm3 .5a.5.5 0 00-1 0v6a.5.5 0 001 0V6z\" />\r\n            <path\r\n              fill-rule=\"evenodd\"\r\n              d=\"M14.5 3a1 1 0 01-1 1H13v9a2 2 0 01-2 2H5a2 2 0 01-2-2V4h-.5a1 1 0 01-1-1V2a1 1 0 011-1H6a1 1 0 011-1h2a1 1 0 011 1h3.5a1 1 0 011 1v1zM4.118 4L4 4.059V13a1 1 0 001 1h6a1 1 0 001-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n              clip-rule=\"evenodd\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoItem;\r\n","import React from \"react\";\r\nimport ToDoItem from \"./ToDoItem\";\r\n\r\nfunction ToDo(props) {\r\n  return (\r\n    <div>\r\n      {props.todos.map((item) => (\r\n        <ToDoItem\r\n          item={item}\r\n          key={item.id}\r\n          markComplete={props.markComplete}\r\n          delToDo={props.delToDo}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <a\r\n        target=\"_blank\"\r\n        href=\"https://github.com/BrascoBG/To-Do-List\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Code here\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction AddToDo(props) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    props.addToDo(title);\r\n    setTitle(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submit} className=\"form\">\r\n        <input\r\n          className=\"input-txt\"\r\n          placeholder=\"Add item...\"\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <svg\r\n          onClick={submit}\r\n          id=\"plus\"\r\n          style={{ color: \"#b53d74\" }}\r\n          class=\"bi bi-plus-circle\"\r\n          width=\"3em\"\r\n          height=\"3em\"\r\n          viewBox=\"0 0 16 16\"\r\n          fill=\"currentColor\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            fill-rule=\"evenodd\"\r\n            d=\"M8 3.5a.5.5 0 01.5.5v4a.5.5 0 01-.5.5H4a.5.5 0 010-1h3.5V4a.5.5 0 01.5-.5z\"\r\n            clip-rule=\"evenodd\"\r\n          />\r\n          <path\r\n            fill-rule=\"evenodd\"\r\n            d=\"M7.5 8a.5.5 0 01.5-.5h4a.5.5 0 010 1H8.5V12a.5.5 0 01-1 0V8z\"\r\n            clip-rule=\"evenodd\"\r\n          />\r\n          <path\r\n            fill-rule=\"evenodd\"\r\n            d=\"M8 15A7 7 0 108 1a7 7 0 000 14zm0 1A8 8 0 108 0a8 8 0 000 16z\"\r\n            clip-rule=\"evenodd\"\r\n          />\r\n        </svg>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddToDo;\r\n","import React from \"react\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h2 className=\"hello\">Hello there! Thank you for checking my project!</h2>\r\n      <div className=\"about-flex\">\r\n        <img className=\"me\" src={require(\"../assets/me.jpg\")} alt=\"its me\" />\r\n        <p className=\"info\">\r\n          This is my ToDo App version 2.0 built with React.js, React Router,\r\n          Class Components, functional Components, State Componenets, Hooks,\r\n          CSS3, etc...\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <h1>Shopping List App</h1>\r\n      <Link className=\"link\" to=\"/\">\r\n        Home\r\n      </Link>{\" \"}\r\n      |{\" \"}\r\n      <Link className=\"link\" to=\"/about\">\r\n        About\r\n      </Link>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport ToDo from \"./componenets/ToDo\";\nimport Footer from \"./componenets/Footer\";\nimport AddToDo from \"./componenets/AddToDo\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport About from \"./componenets/About\";\nimport Header from \"./componenets/Header\";\nimport \"./App.css\";\n\nclass AppToDo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n    };\n  }\n\n  markComplete = (id) => {\n    this.setState({\n      todos: this.state.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      }),\n    });\n  };\n\n  delToDo = (id) => {\n    this.setState({\n      todos: [...this.state.todos.filter((todo) => todo.id !== id)],\n    });\n  };\n\n  addToDo = (title) => {\n    if (title !== \"\") {\n      const newItem = {\n        id: uuidv4(),\n        title: title,\n        completed: false,\n      };\n      this.setState({ todos: [...this.state.todos, newItem] });\n    } else {\n      alert(\"Please add Item\");\n    }\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"main\">\n          <Header />\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => (\n              <React.Fragment>\n                <AddToDo addToDo={this.addToDo} />\n                <ToDo\n                  todos={this.state.todos}\n                  markComplete={this.markComplete}\n                  delToDo={this.delToDo}\n                />\n              </React.Fragment>\n            )}\n          />\n          <Route path=\"/about\" component={About} />\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default AppToDo;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppToDo from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppToDo />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}